# Generated by Django 4.0.4 on 2022-10-27 12:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(default='Имя', max_length=255, verbose_name='Имя пользователя')),
                ('email', models.EmailField(default='admin@admin.com', max_length=254, unique=True, verbose_name='email пользователя')),
                ('phone', models.CharField(max_length=255, null=True, verbose_name='Телефон пользователя')),
                ('avatar', models.URLField(blank=True, null=True, verbose_name='Аватар пользователя (Путь)')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Биография пользователя')),
                ('authority', models.IntegerField(verbose_name='Полномочия пользователя')),
                ('is_register', models.BooleanField(default=True, verbose_name='Флаг зарегистрированого пользователя')),
                ('currency', models.CharField(blank=True, choices=[('ALL', 'ALL'), ('DZD', 'DZD'), ('ARS', 'ARS'), ('AUD', 'AUD'), ('BSD', 'BSD'), ('BHD', 'BHD'), ('BDT', 'BDT'), ('AMD', 'AMD'), ('BBD', 'BBD'), ('BMD', 'BMD'), ('BTN', 'BTN'), ('BOB', 'BOB'), ('BWP', 'BWP'), ('BZD', 'BZD'), ('SBD', 'SBD'), ('BND', 'BND'), ('MMK', 'MMK'), ('BIF', 'BIF'), ('KHR', 'KHR'), ('CAD', 'CAD'), ('CVE', 'CVE'), ('KYD', 'KYD'), ('LKR', 'LKR'), ('CLP', 'CLP'), ('CNY', 'CNY'), ('COP', 'COP'), ('KMF', 'KMF'), ('CRC', 'CRC'), ('HRK', 'HRK'), ('CUP', 'CUP'), ('CZK', 'CZK'), ('DKK', 'DKK'), ('DOP', 'DOP'), ('SVC', 'SVC'), ('ETB', 'ETB'), ('ERN', 'ERN'), ('FKP', 'FKP'), ('FJD', 'FJD'), ('DJF', 'DJF'), ('GMD', 'GMD'), ('GIP', 'GIP'), ('GTQ', 'GTQ'), ('GNF', 'GNF'), ('GYD', 'GYD'), ('HTG', 'HTG'), ('HNL', 'HNL'), ('HKD', 'HKD'), ('HUF', 'HUF'), ('ISK', 'ISK'), ('INR', 'INR'), ('IDR', 'IDR'), ('IRR', 'IRR'), ('IQD', 'IQD'), ('ILS', 'ILS'), ('JMD', 'JMD'), ('JPY', 'JPY'), ('KZT', 'KZT'), ('JOD', 'JOD'), ('KES', 'KES'), ('KPW', 'KPW'), ('KRW', 'KRW'), ('KWD', 'KWD'), ('KGS', 'KGS'), ('LAK', 'LAK'), ('LBP', 'LBP'), ('LSL', 'LSL'), ('LRD', 'LRD'), ('LYD', 'LYD'), ('MOP', 'MOP'), ('MWK', 'MWK'), ('MYR', 'MYR'), ('MVR', 'MVR'), ('MUR', 'MUR'), ('MXN', 'MXN'), ('MNT', 'MNT'), ('MDL', 'MDL'), ('MAD', 'MAD'), ('OMR', 'OMR'), ('NAD', 'NAD'), ('NPR', 'NPR'), ('ANG', 'ANG'), ('AWG', 'AWG'), ('VUV', 'VUV'), ('NZD', 'NZD'), ('NIO', 'NIO'), ('NGN', 'NGN'), ('NOK', 'NOK'), ('PKR', 'PKR'), ('PAB', 'PAB'), ('PGK', 'PGK'), ('PYG', 'PYG'), ('PEN', 'PEN'), ('PHP', 'PHP'), ('QAR', 'QAR'), ('RUB', 'RUB'), ('RWF', 'RWF'), ('SHP', 'SHP'), ('SAR', 'SAR'), ('SCR', 'SCR'), ('SLL', 'SLL'), ('SGD', 'SGD'), ('VND', 'VND'), ('SOS', 'SOS'), ('ZAR', 'ZAR'), ('SSP', 'SSP'), ('SZL', 'SZL'), ('SEK', 'SEK'), ('CHF', 'CHF'), ('SYP', 'SYP'), ('THB', 'THB'), ('TOP', 'TOP'), ('TTD', 'TTD'), ('AED', 'AED'), ('TND', 'TND'), ('UGX', 'UGX'), ('MKD', 'MKD'), ('EGP', 'EGP'), ('GBP', 'GBP'), ('TZS', 'TZS'), ('USD', 'USD'), ('UYU', 'UYU'), ('UZS', 'UZS'), ('WST', 'WST'), ('YER', 'YER'), ('TWD', 'TWD'), ('SLE', 'SLE'), ('VED', 'VED'), ('VES', 'VES'), ('MRU', 'MRU'), ('STN', 'STN'), ('CUC', 'CUC'), ('ZWL', 'ZWL'), ('BYN', 'BYN'), ('TMT', 'TMT'), ('GHS', 'GHS'), ('SDG', 'SDG'), ('UYI', 'UYI'), ('RSD', 'RSD'), ('MZN', 'MZN'), ('AZN', 'AZN'), ('RON', 'RON'), ('TRY', 'TRY'), ('XAF', 'XAF'), ('XCD', 'XCD'), ('XOF', 'XOF'), ('XPF', 'XPF'), ('XDR', 'XDR'), ('ZMW', 'ZMW'), ('SRD', 'SRD'), ('MGA', 'MGA'), ('COU', 'COU'), ('AFN', 'AFN'), ('TJS', 'TJS'), ('AOA', 'AOA'), ('BGN', 'BGN'), ('CDF', 'CDF'), ('ВАМ', 'ВАМ'), ('EUR', 'EUR'), ('UAH', 'UAH'), ('GEL', 'GEL'), ('PLN', 'PLN'), ('BRL', 'BRL')], default='RUB', max_length=3, null=True, verbose_name='Валюта')),
                ('is_deleted', models.BooleanField(blank=True, default=False, verbose_name='Флаг удалённого пользователя')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='CurrencyCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pair', models.CharField(max_length=6, verbose_name='Пара валют')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('date', models.DateField(verbose_name='Дата записи')),
            ],
            options={
                'verbose_name': 'Курсы валют',
                'verbose_name_plural': 'Курсы валют',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название проекта')),
                ('budget', models.FloatField(blank=True, null=True, verbose_name='Бюджет проекта')),
                ('is_archived', models.BooleanField(verbose_name='Флаг архивности проекта')),
                ('work_time', models.FloatField(default=0, null=True, verbose_name='Общее рабочее время')),
                ('average_rate', models.FloatField(default=0, verbose_name='Средняя ставка')),
                ('sum_salary', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарная зп, всех работников')),
                ('masters_work_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарное рабочее время всех мастеров проекта')),
                ('mentors_work_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарное рабочее время всех менторов проекта')),
                ('assists_work_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарное рабочее время всех подсобных проекта')),
                ('interns_work_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарное рабочее время всех интернов проекта')),
                ('pupils_work_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарное рабочее время всех учеников проекта')),
                ('currency', models.CharField(choices=[('ALL', 'ALL'), ('DZD', 'DZD'), ('ARS', 'ARS'), ('AUD', 'AUD'), ('BSD', 'BSD'), ('BHD', 'BHD'), ('BDT', 'BDT'), ('AMD', 'AMD'), ('BBD', 'BBD'), ('BMD', 'BMD'), ('BTN', 'BTN'), ('BOB', 'BOB'), ('BWP', 'BWP'), ('BZD', 'BZD'), ('SBD', 'SBD'), ('BND', 'BND'), ('MMK', 'MMK'), ('BIF', 'BIF'), ('KHR', 'KHR'), ('CAD', 'CAD'), ('CVE', 'CVE'), ('KYD', 'KYD'), ('LKR', 'LKR'), ('CLP', 'CLP'), ('CNY', 'CNY'), ('COP', 'COP'), ('KMF', 'KMF'), ('CRC', 'CRC'), ('HRK', 'HRK'), ('CUP', 'CUP'), ('CZK', 'CZK'), ('DKK', 'DKK'), ('DOP', 'DOP'), ('SVC', 'SVC'), ('ETB', 'ETB'), ('ERN', 'ERN'), ('FKP', 'FKP'), ('FJD', 'FJD'), ('DJF', 'DJF'), ('GMD', 'GMD'), ('GIP', 'GIP'), ('GTQ', 'GTQ'), ('GNF', 'GNF'), ('GYD', 'GYD'), ('HTG', 'HTG'), ('HNL', 'HNL'), ('HKD', 'HKD'), ('HUF', 'HUF'), ('ISK', 'ISK'), ('INR', 'INR'), ('IDR', 'IDR'), ('IRR', 'IRR'), ('IQD', 'IQD'), ('ILS', 'ILS'), ('JMD', 'JMD'), ('JPY', 'JPY'), ('KZT', 'KZT'), ('JOD', 'JOD'), ('KES', 'KES'), ('KPW', 'KPW'), ('KRW', 'KRW'), ('KWD', 'KWD'), ('KGS', 'KGS'), ('LAK', 'LAK'), ('LBP', 'LBP'), ('LSL', 'LSL'), ('LRD', 'LRD'), ('LYD', 'LYD'), ('MOP', 'MOP'), ('MWK', 'MWK'), ('MYR', 'MYR'), ('MVR', 'MVR'), ('MUR', 'MUR'), ('MXN', 'MXN'), ('MNT', 'MNT'), ('MDL', 'MDL'), ('MAD', 'MAD'), ('OMR', 'OMR'), ('NAD', 'NAD'), ('NPR', 'NPR'), ('ANG', 'ANG'), ('AWG', 'AWG'), ('VUV', 'VUV'), ('NZD', 'NZD'), ('NIO', 'NIO'), ('NGN', 'NGN'), ('NOK', 'NOK'), ('PKR', 'PKR'), ('PAB', 'PAB'), ('PGK', 'PGK'), ('PYG', 'PYG'), ('PEN', 'PEN'), ('PHP', 'PHP'), ('QAR', 'QAR'), ('RUB', 'RUB'), ('RWF', 'RWF'), ('SHP', 'SHP'), ('SAR', 'SAR'), ('SCR', 'SCR'), ('SLL', 'SLL'), ('SGD', 'SGD'), ('VND', 'VND'), ('SOS', 'SOS'), ('ZAR', 'ZAR'), ('SSP', 'SSP'), ('SZL', 'SZL'), ('SEK', 'SEK'), ('CHF', 'CHF'), ('SYP', 'SYP'), ('THB', 'THB'), ('TOP', 'TOP'), ('TTD', 'TTD'), ('AED', 'AED'), ('TND', 'TND'), ('UGX', 'UGX'), ('MKD', 'MKD'), ('EGP', 'EGP'), ('GBP', 'GBP'), ('TZS', 'TZS'), ('USD', 'USD'), ('UYU', 'UYU'), ('UZS', 'UZS'), ('WST', 'WST'), ('YER', 'YER'), ('TWD', 'TWD'), ('SLE', 'SLE'), ('VED', 'VED'), ('VES', 'VES'), ('MRU', 'MRU'), ('STN', 'STN'), ('CUC', 'CUC'), ('ZWL', 'ZWL'), ('BYN', 'BYN'), ('TMT', 'TMT'), ('GHS', 'GHS'), ('SDG', 'SDG'), ('UYI', 'UYI'), ('RSD', 'RSD'), ('MZN', 'MZN'), ('AZN', 'AZN'), ('RON', 'RON'), ('TRY', 'TRY'), ('XAF', 'XAF'), ('XCD', 'XCD'), ('XOF', 'XOF'), ('XPF', 'XPF'), ('XDR', 'XDR'), ('ZMW', 'ZMW'), ('SRD', 'SRD'), ('MGA', 'MGA'), ('COU', 'COU'), ('AFN', 'AFN'), ('TJS', 'TJS'), ('AOA', 'AOA'), ('BGN', 'BGN'), ('CDF', 'CDF'), ('ВАМ', 'ВАМ'), ('EUR', 'EUR'), ('UAH', 'UAH'), ('GEL', 'GEL'), ('PLN', 'PLN'), ('BRL', 'BRL')], default='RUB', max_length=3, verbose_name='Валюта')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.appuser', verbose_name='ID Создателя')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.CreateModel(
            name='ProjectEmployee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('advance', models.FloatField(default=0, verbose_name='Размер аванса')),
                ('salary', models.FloatField(blank=True, default=0, null=True, verbose_name='Размер зп, считается автоматически')),
                ('work_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарное рабочее время')),
                ('rate', models.FloatField(blank=True, default=0, verbose_name='Ставка в час')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='main.project', verbose_name='ID Проекта')),
            ],
            options={
                'verbose_name': 'Работник',
                'verbose_name_plural': 'Работники',
            },
        ),
        migrations.CreateModel(
            name='SocialNetworks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(choices=[('Instagram', 'Instagram'), ('VK', 'VK'), ('YouTube', 'YouTube'), ('Telegram', 'Telegram'), ('Twitter', 'Twitter'), ('Facebook', 'Facebook')], max_length=255, verbose_name='Название')),
                ('url', models.TextField(blank=True, null=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Соц. сеть',
                'verbose_name_plural': 'Соц. сети',
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('work_time', models.FloatField(verbose_name='Выданное рабочее время')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.projectemployee', verbose_name='ID Рабочего')),
                ('initiator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.appuser', verbose_name='ID Инициатора')),
            ],
            options={
                'verbose_name': 'Рабочее время работника',
                'verbose_name_plural': 'Рабочие времена работников',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='main.appuser', verbose_name='ID Создателя')),
                ('participants', models.ManyToManyField(related_name='participants', to='main.appuser', verbose_name='Участники команды')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название роли')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание роли')),
                ('color', models.CharField(max_length=255, verbose_name='Цвет роли HEX')),
                ('percentage', models.FloatField(blank=True, null=True, verbose_name='Доля в процентах')),
                ('amount', models.FloatField(blank=True, null=True, verbose_name='Размер платы')),
                ('is_base', models.BooleanField(default=False, verbose_name='Флаг базовой роли')),
                ('type', models.IntegerField(blank=True, default=0, verbose_name='Тип роли')),
                ('code', models.IntegerField(verbose_name='Код роли')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser', verbose_name='ID Создателя роли')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='main.project', verbose_name='Проект, которому принадлежит роль')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
            },
        ),
        migrations.CreateModel(
            name='ProjectTimeEntryHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('work_time', models.FloatField(default=0, null=True, verbose_name='Общее рабочее время')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Рабочие времена на проекте',
                'verbose_name_plural': 'Рабочие времена на проекте',
            },
        ),
        migrations.AddField(
            model_name='projectemployee',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.role', verbose_name='ID Роли пользователя'),
        ),
        migrations.AddField(
            model_name='projectemployee',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser', verbose_name='ID Пользователя'),
        ),
        migrations.CreateModel(
            name='HistoryWorker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('date_change', models.DateField(auto_now=True, null=True, verbose_name='Дата внесения изменений')),
                ('salary', models.FloatField(blank=True, default=0, null=True, verbose_name='Размер зп')),
                ('rate', models.FloatField(blank=True, default=0, null=True, verbose_name='Ставка рабочего')),
                ('work_time', models.FloatField(blank=True, default=0, null=True, verbose_name='Суммарное рабочее время')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.projectemployee', verbose_name='ID Рабочего')),
            ],
            options={
                'verbose_name': 'История работника',
                'verbose_name_plural': 'Истории работников',
            },
        ),
        migrations.CreateModel(
            name='HistoryRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_change', models.DateField(blank=True, null=True, verbose_name='Дата внесения изменений')),
                ('rate', models.FloatField(blank=True, default=0, null=True, verbose_name='Ставка рабочего')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.projectemployee', verbose_name='ID Рабочего')),
            ],
            options={
                'verbose_name': 'История ставок',
                'verbose_name_plural': 'Истории ставок',
            },
        ),
        migrations.CreateModel(
            name='HistoryProject',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('date_change', models.DateField(auto_now=True, null=True, verbose_name='Дата внесения изменений')),
                ('income', models.FloatField(blank=True, default=0, null=True, verbose_name='Доход всех работников')),
                ('project', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='main.project', verbose_name='ID Проекта')),
            ],
            options={
                'verbose_name': 'История проекта',
                'verbose_name_plural': 'Истории проектов',
            },
        ),
        migrations.CreateModel(
            name='HistoryAdvance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи (timestamp)')),
                ('advance', models.FloatField(blank=True, default=0, null=True, verbose_name='Размер аванса')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.projectemployee', verbose_name='ID Рабочего')),
            ],
            options={
                'verbose_name': 'Аванс работника',
                'verbose_name_plural': 'Авансы работников',
            },
        ),
        migrations.CreateModel(
            name='FileUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='users_files', verbose_name='Файл')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Файл пользователя',
                'verbose_name_plural': 'Файлы пользователей',
            },
        ),
        migrations.CreateModel(
            name='AuthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_data', models.TextField(unique=True, verbose_name='token')),
                ('refresh_token_data', models.TextField(unique=True, verbose_name='refresh token')),
                ('valid_until', models.DateField(verbose_name='Срок годности токена')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.appuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Токены пользователя',
                'verbose_name_plural': 'Токены пользователей',
            },
        ),
        migrations.AddField(
            model_name='appuser',
            name='socials',
            field=models.ManyToManyField(blank=True, related_name='socials', to='main.socialnetworks', verbose_name='Соц. Сети'),
        ),
    ]
